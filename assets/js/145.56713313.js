(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{470:function(t,a,r){"use strict";r.r(a);var s=r(0),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"垃圾回收机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制"}},[t._v("#")]),t._v(" 垃圾回收机制")]),t._v(" "),r("h2",{attrs:{id:"什么是垃圾"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是垃圾"}},[t._v("#")]),t._v(" 什么是垃圾")]),t._v(" "),r("blockquote",[r("ul",[r("li",[r("ol",[r("li",[t._v("没有被引用的对象就是垃圾。")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"2"}},[r("li",[t._v("如果几个对象引用形成一个环，互相引用，但根访问不到它们，这几个对象也是垃圾。")])])])])]),t._v(" "),r("h2",{attrs:{id:"垃圾回收机制-javascript具有自动回收"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制-javascript具有自动回收"}},[t._v("#")]),t._v(" 垃圾回收机制(JavaScript具有自动回收).")]),t._v(" "),r("blockquote",[r("p",[t._v("原理：找出那些不再继续使用的变量，然后释放其所占用的内存。(垃圾回收器会按照固定的时间间隔周期性地执行这一操作)")])]),t._v(" "),r("h2",{attrs:{id:"v8下的回收算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v8下的回收算法"}},[t._v("#")]),t._v(" V8下的回收算法")]),t._v(" "),r("h4",{attrs:{id:"没有固定一种回收算法能胜任所有场景，因此分为两种。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#没有固定一种回收算法能胜任所有场景，因此分为两种。"}},[t._v("#")]),t._v(" 没有固定一种回收算法能胜任所有场景，因此分为两种。")]),t._v(" "),r("blockquote",[r("ul",[r("li",[r("ol",[r("li",[t._v("新生代算法：Scavenge算法\n存放存活时间"),r("strong",[t._v("短")]),t._v("的对象")])])])])]),t._v(" "),r("blockquote",[r("ul",[r("li",[r("ol",{attrs:{start:"2"}},[r("li",[t._v("老生代算法：  标记清除算法\n存放存活时间"),r("strong",[t._v("长")]),t._v("的对象")])])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);