(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{437:function(t,s,e){"use strict";e.r(s);var a=e(0),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"single-spa"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#single-spa"}},[t._v("#")]),t._v(" single-spa")]),t._v(" "),e("h2",{attrs:{id:"概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),e("blockquote",[e("p",[t._v("single-spa由ThoughtWorks 2016年提出, 是微前端的一个解决方案，只实现了路由劫持和应用加载. "),e("a",{attrs:{href:"https://juejin.cn/post/6844904025565954055#heading-13",target:"_blank",rel:"noopener noreferrer"}},[t._v("css隔离"),e("OutboundLink")],1),t._v("与js沙箱需要额外插件处理.")])]),t._v(" "),e("h2",{attrs:{id:"实现思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现思路"}},[t._v("#")]),t._v(" 实现思路")]),t._v(" "),e("blockquote",[e("p",[t._v("将一个应用划分成若干个子应用，将子应用打包成一个个的"),e("strong",[t._v("lib")]),t._v("，当路径切换时加载不同的子应用，这样子应用都是独立的，技术栈也不用做限制了，解决了前端协调开发问题")])])])}),[],!1,null,null,null);s.default=r.exports}}]);