(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{507:function(t,a,e){"use strict";e.r(a);var s=e(0),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vdom与diff算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vdom与diff算法"}},[t._v("#")]),t._v(" vdom与diff算法")]),t._v(" "),e("h2",{attrs:{id:"对虚拟dom的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对虚拟dom的理解"}},[t._v("#")]),t._v(" 对虚拟DOM的理解")]),t._v(" "),e("blockquote",[e("p",[t._v("1、用 JavaScript 对象结构表示 DOM 树的结构，然后用这个树构建一个真正的 DOM 树，插到文档当中；")])]),t._v(" "),e("blockquote",[e("p",[t._v("2、当状态变更的时候，重新构造一棵新的对象树，然后用新的树和旧的树进行比较，记录两棵树差异；")])]),t._v(" "),e("blockquote",[e("p",[t._v("3、把 2 所记录的差异应用到步骤 1 所构建的真正的 DOM 树上，视图就更新了。\n"),e("img",{attrs:{src:"https://user-images.githubusercontent.com/44160914/78689612-1b7cb880-7929-11ea-9e91-ae092b660a73.png",alt:"vdom"}})])]),t._v(" "),e("h2",{attrs:{id:"diff算法o-n"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#diff算法o-n"}},[t._v("#")]),t._v(" diff算法O(n)")]),t._v(" "),e("p",[e("strong",[t._v("vdom中最核心的一部分。【diff即对比，如git diff】")])]),t._v(" "),e("blockquote",[e("p",[t._v("顾名思义就是通过算法来查找两个树之间的异同点。两个树的完全的 diff 算法是一个时间复杂度为 O(n^3) 的问题。")])]),t._v(" "),e("h2",{attrs:{id:"对比新旧vnode树的三个关键点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对比新旧vnode树的三个关键点"}},[t._v("#")]),t._v(" 对比新旧vnode树的三个关键点")]),t._v(" "),e("h4",{attrs:{id:"_1、只比较同一层级，不跨级比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、只比较同一层级，不跨级比较"}},[t._v("#")]),t._v(" 1、只比较同一层级，不跨级比较")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-images.githubusercontent.com/44160914/78691397-246e8980-792b-11ea-8e47-0228e32c2e8a.png",alt:"image"}})]),t._v(" "),e("h4",{attrs:{id:"_2、tag不同，则直接删除重建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、tag不同，则直接删除重建"}},[t._v("#")]),t._v(" 2、tag不同，则直接删除重建")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-images.githubusercontent.com/44160914/78691485-3f40fe00-792b-11ea-9b88-2e24f6c37d66.png",alt:"tag"}})]),t._v(" "),e("h4",{attrs:{id:"_3、tag和key两者都相同，则认为是相同节点，不再深度比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、tag和key两者都相同，则认为是相同节点，不再深度比较"}},[t._v("#")]),t._v(" 3、tag和key两者都相同，则认为是相同节点，不再深度比较")]),t._v(" "),e("h3",{attrs:{id:"diff算法关键函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#diff算法关键函数"}},[t._v("#")]),t._v(" diff算法关键函数")]),t._v(" "),e("blockquote",[e("p",[t._v("patchVnode")])]),t._v(" "),e("blockquote",[e("p",[t._v("addVnodes & removeVnodes")])]),t._v(" "),e("blockquote",[e("p",[t._v("updateChildren (key的重要性)")])]),t._v(" "),e("h3",{attrs:{id:"vue中的虚拟dom借鉴了snabbdom库的实现，然后加入了一些vue的特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue中的虚拟dom借鉴了snabbdom库的实现，然后加入了一些vue的特性"}},[t._v("#")]),t._v(" Vue中的虚拟dom借鉴了snabbdom库的实现，然后加入了一些vue的特性")]),t._v(" "),e("p",[t._v("https://juejin.im/post/5d36cc575188257aea108a74#heading-9")]),t._v(" "),e("blockquote",[e("p",[t._v("vue中的vdom使用VNode这个class类去描述的，使用vm.__patch__方法完成的prevVnode与vnode的diff过程，最后生成新的dom节点完成视图的更新。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);