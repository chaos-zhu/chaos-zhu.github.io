(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{415:function(t,e,r){"use strict";r.r(e);var a=r(0),l=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"es6-es7-es8-es9-es10"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es6-es7-es8-es9-es10"}},[t._v("#")]),t._v(" ES6&ES7&ES8&ES9&ES10+")]),t._v(" "),r("h2",{attrs:{id:"es6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[t._v("#")]),t._v(" ES6")]),t._v(" "),r("p",[r("strong",[t._v("【支持IE9以上，支持IE9以下版本需要使用Babel】")])]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("严格模式(ES6模块默认启用)【函数的参数不能有同名属性、不能使用with语句、顶层函数调用this指向undefined】\nhttps://blog.csdn.net/fw19940314/article/details/78318708")])])]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("新增Symbol (创建唯一值，避免对象属性冲突)类型")]),t._v(" "),r("li",[t._v("Let与Const")]),t._v(" "),r("li",[t._v("模板字符串")]),t._v(" "),r("li",[t._v("解构赋值")]),t._v(" "),r("li",[t._v("...操作符【可作为"),r("strong",[t._v("剩余运算符")]),t._v("(例如函数参数)，也可以作为"),r("strong",[t._v("展开运算符")]),t._v("】")]),t._v(" "),r("li",[t._v("对象属性简写")])])]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("箭头函数【指向'外层'作用域】")]),t._v(" "),r("li",[t._v("函数参数默认值以及拖尾逗号")]),t._v(" "),r("li",[t._v("Generator函数")])])]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("class类")]),t._v(" "),r("li",[t._v("Promise")]),t._v(" "),r("li",[t._v("Proxy 对象【无法polyfill】")]),t._v(" "),r("li",[t._v("Set (类似数组) 和 Map (类似对象) 数据结构")])])]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("Reflect 对象（反射机制）")])])]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("for...of\n// 迭代具有iterator接口的对象【Array、 String、FormData、Map、 Set、 arguments(伪数组都可以)、 NodeList对象、 TypedArray(二进制数据缓冲区)】\n"),r("strong",[t._v("注意")]),t._v("：任何实现了Iterator接口的对象都可以使用展开符转为数组(@ruanyifeng ES6 p138)")])])]),t._v(" "),r("p",[r("strong",[t._v("Array.prototype的新增方法")])]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("Array.prototype.from()  // 将伪数组转为数组")]),t._v(" "),r("li",[t._v("Array.prototype.find() // 查找元素(传入回调函数)，返回第一个符合条件的元素")]),t._v(" "),r("li",[t._v("Array.prototype.findIndex() // 查找符合条件的元素的下标")]),t._v(" "),r("li",[t._v("Array.prototype.copyWithin(target[, start, end]) //\n[1, 2, 3, 4, 5, 6, 7].copyWithin(2, 0) // [1, 2, 1, 2, 3, 4, 5] 从target下标开始，从start覆盖后面的内容知道end【p143】")])])]),t._v(" "),r("hr"),t._v(" "),r("h2",{attrs:{id:"es7"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es7"}},[t._v("#")]),t._v(" ES7")]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("Array.prototype.includes() // [1, 2, NaN].includes(NaN) // true\nindexOf的缺点: ①[1, 2, NaN].indexOf(NaN) // -1 原因是indexOf使用===比较符 ② 不存在返回-1，表达不够直观。")])])]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("指数操作符**")])])]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("类的装饰器【一般用于扩展类的方法】\nhttps://github.com/chaos-zhu/typescript-study/blob/master/16.%E7%B1%BB%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8.ts")])])]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v(":: // 双冒号，更改函数内部的this指向\n示例: obj::fn(123) // 等价于fn.call(obj, 123)")])])]),t._v(" "),r("hr"),t._v(" "),r("h2",{attrs:{id:"es8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es8"}},[t._v("#")]),t._v(" ES8")]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("async...await【Generator+Promise的语法糖】")]),t._v(" "),r("li",[t._v("Object.values() 和 Object.entries()")]),t._v(" "),r("li",[t._v("Object.getOwnPropertyDescriptors() // 获取一个对象所有的属性的描述符")]),t._v(" "),r("li",[t._v("String.padStart()和String.padEnd() // 举例：'8'.padStart(2, '0') // 08")])])]),t._v(" "),r("hr"),t._v(" "),r("h2",{attrs:{id:"es9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es9"}},[t._v("#")]),t._v(" ES9")]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("for await ... of // 异步迭代")]),t._v(" "),r("li",[t._v("Promise.finally() // 指定Promise的最终逻辑，无论成功失败")]),t._v(" "),r("li",[t._v("正则相关：（正则表达式命名捕获组、正则表达式反向断言、正则表达式dotAll模式）")])])]),t._v(" "),r("hr"),t._v(" "),r("h2",{attrs:{id:"es10"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es10"}},[t._v("#")]),t._v(" ES10")]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v('Array.flat()和flatMap()方法 // 扁平化数组【Infinity："number"无穷大】')]),t._v(" "),r("li",[t._v("String的trimStart()方法和trimEnd()方法")]),t._v(" "),r("li",[t._v("Object.fromEntries() // 可将FormData转化为json 【Object.entries() 的逆向操作,转化> - FormData时返回空数组[]】")]),t._v(" "),r("li",[t._v("String.prototype.matchAll // matchAll可以更好的用于分组 【https://juejin.im/post/5ca2e1935188254416288eb2#heading-53】")]),t._v(" "),r("li",[t._v("修改 catch 绑定 // try { } catch (e) { }  ，可省略(e)")]),t._v(" "),r("li",[t._v("新的基本数据类型BigInt")])])]),t._v(" "),r("h2",{attrs:{id:"七种数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七种数据类型"}},[t._v("#")]),t._v(" 七种数据类型")]),t._v(" "),r("blockquote",[r("ul",[r("li",[r("strong",[t._v("截至ES10一共有七种基本数据类型，分别是： String、Number、Boolean、Null、Undefined、Symbol、BigInt；")])]),t._v(" "),r("li",[r("strong",[t._v("一种引用类型（Object[object\\array\\function]）")])])])])])}),[],!1,null,null,null);e.default=l.exports}}]);