(window.webpackJsonp=window.webpackJsonp||[]).push([[223],{549:function(a,t,s){"use strict";s.r(t);var e=s(0),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"webpack构建优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack构建优化"}},[a._v("#")]),a._v(" webpack构建优化")]),a._v(" "),s("h2",{attrs:{id:"配置部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置部分"}},[a._v("#")]),a._v(" 配置部分")]),a._v(" "),s("blockquote",[s("p",[a._v("1、及时升级Node.js或webpack稳定版本，webpack4构建速度较webpack3提升了40%。(插件及其他内部模块升级)")])]),a._v(" "),s("blockquote",[s("p",[a._v("2、在不必要的模块上不要使用loader,例如exclude:node_modules(或者include: path.resolve(__dirname, '../src'))")])]),a._v(" "),s("blockquote",[s("p",[a._v("3、合理配置plugin，例如在dev环境下就没必要配置一些压缩代码的插件")])]),a._v(" "),s("blockquote",[s("p",[a._v("4、合理配置resolve中的extensions【自动寻找扩展名】")])]),a._v(" "),s("blockquote",[s("p",[a._v("5、控制包文件大小, 尽量使用ES module按需引入变量，做到Tree-Shaking最优化")])]),a._v(" "),s("h2",{attrs:{id:"进阶部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进阶部分"}},[a._v("#")]),a._v(" 进阶部分")]),a._v(" "),s("h5",{attrs:{id:"_6、使用dllplugin不再打包库文件-自带"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、使用dllplugin不再打包库文件-自带"}},[a._v("#")]),a._v(" 6、使用DllPlugin不再打包库文件(自带)")]),a._v(" "),s("blockquote",[s("p",[a._v("思路：把固定的库代码生成映射文件，通过配置webpack在项目中引入库文件时 不再去node_modules寻找和打包，而是直接使用已经打包好的库文件，这样就不用每次都打包库文件。")])]),a._v(" "),s("h6",{attrs:{id:"实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[a._v("#")]),a._v(" 实现")]),a._v(" "),s("blockquote",[s("p",[a._v("(1)、新增webpack配置文件(webpack.dll.js)，配置好生成库代码和映射文件的参数。"),s("a",{attrs:{href:"https://github.com/chaos-zhu/webpack-study/blob/master/build/webpack.dll.js",target:"_blank",rel:"noopener noreferrer"}},[a._v("webpack.dll.js"),s("OutboundLink")],1)])]),a._v(" "),s("blockquote",[s("p",[a._v("(2)、在webpack.base.js中使用add-asset-html-webpack-plugin将打包好的库文件引入到index.html中")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("addAssetHtmlWebpackPlugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    filepath"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("__dirname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'../dll/dllPack.dll.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("(3)、在webpack.base.js中使用webpack.DllPlugin声明配置文件，这样webpack打包就不会到node_modules中去打包库文件了。")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("webpack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("DllReferencePlugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    manifest"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("__dirname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'../dll/dllPack.manifest.json'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h2",{attrs:{id:"进一步提升编译速度-多进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进一步提升编译速度-多进程"}},[a._v("#")]),a._v(" 进一步提升编译速度(多进程)")]),a._v(" "),s("p",[s("strong",[a._v("就要知道瓶颈在哪？通过测试，发现有两个阶段较慢")])]),a._v(" "),s("blockquote",[s("p",[a._v("1、babel 等 loaders 解析阶段.")])]),a._v(" "),s("blockquote",[s("p",[a._v("2、 js 压缩阶段。loader 解析稍后会讨论，而 js 压缩是发布编译的最后阶段，通常webpack需要卡好一会，这是因为压缩 JS 需要先将代码解析成 AST 语法树，然后需要根据复杂的规则去分析和处理 AST，最后将 AST 还原成 JS，这个过程涉及到大量计算，因此比较耗时.")])]),a._v(" "),s("h3",{attrs:{id:"_7、开启多进程打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、开启多进程打包"}},[a._v("#")]),a._v(" 7、开启多进程打包")]),a._v(" "),s("h4",{attrs:{id:"_7-1-happypack可以开启多进程加速loader的解析阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-happypack可以开启多进程加速loader的解析阶段"}},[a._v("#")]),a._v(" 7.1 happyPack可以开启多进程加速loader的解析阶段")]),a._v(" "),s("h5",{attrs:{id:"注意：项目越大效果越明显，项目较小可能反而会降低速度-进程开销-，所以这个插件应该按需使用。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意：项目越大效果越明显，项目较小可能反而会降低速度-进程开销-，所以这个插件应该按需使用。"}},[a._v("#")]),a._v(" 注意：项目越大效果越明显，项目较小可能反而会降低速度(进程开销)，所以这个插件应该按需使用。")]),a._v(" "),s("h4",{attrs:{id:"_7-2-webpack-parallel-uglify-plugin可以开启多进程加速代码的压缩阶段【效果显著】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-webpack-parallel-uglify-plugin可以开启多进程加速代码的压缩阶段【效果显著】"}},[a._v("#")]),a._v(" 7.2 webpack-parallel-uglify-plugin可以开启多进程加速代码的压缩阶段【效果显著】")]),a._v(" "),s("blockquote",[s("p",[a._v("支持配置是否删除注释、console语句的功能")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ParallelUglifyPlugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    uglifyJS"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        output"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            comments"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//是否保留代码中的注释，默认为保留")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        warnings"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//是否在UglifyJS删除没有用到的代码时输出警告信息，默认为false")]),a._v("\n        compress"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            drop_console"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//是否删除代码中所有的console语句，默认为false")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        cacheDir"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("__dirname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'../.catch'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//用作缓存的可选绝对路径。如果未提供，则不使用缓存。")]),a._v("\n        sourceMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//可选布尔值。是否为压缩后的代码生成对应的Source Map(浏览器可以在调试代码时定位到源码位置了),这会减慢编译速度。默认为false")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);